{
  "hash": "2596d8f6109b05c5171cad878338b13b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Dry Prac 2 — Subcellular Fractionation Analysis\"\nauthor: \"Dr Nikolas Johnston, University of Wollongong\"\ndate: \"March, 2025\"\n---\n\n\n\n\n\n\n## Background and Purpose\n\nIn Dry Practical 1, you were introduced to the basics of handling biological data in R, using tidyverse functions and `ggplot2` to visualise simple trends. That session was designed to help you become comfortable navigating RStudio, working with tabular data, and generating figures that communicate biological patterns clearly.\n\nIn this second dry practical, we’ll extend those skills by working with **experimental data** that you generated in the wet lab. Specifically, we’ll use your results from the **subcellular fractionation practical**, where you separated healthy and diseased cells into mitochondrial and cytosolic fractions, then measured protein concentration and enzyme activity.\n\nThis practical will focus on:\n\n-   Calculating **specific enzyme activity** for each sample\n-   Comparing the mitochondrial and cytosolic fractions from healthy vs diseased cells\n-   Using `dplyr` tools to filter, summarise, and interpret biological data\n-   Visualising patterns across individual and class-wide datasets\n\nBy the end of this session, you'll have created professional-quality plots and learned how data wrangling tools in R can help you test biological hypotheses.\n\n::: callout-note\n### ACTION REQUIRED {style=\"color: red\"}\n\nOpen R studio on your computer and create a new r script for this class. If you are confused about how to do this refer to the **introduction** section of the BIOL340 practical website.\n:::\n\n## Visualizing Data and Installing and Loading Packages\n\nR can make many types of plots. Let's plot our nucleus sizes using **ggplot2**, which is included in the **tidyverse**.\n\nIf you haven't installed the **tidyverse** package yet, you can do so via copying and running:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"tidyverse\")\n```\n:::\n\n\n\n\nWe also have to load the library by copying and running this line of code:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)  # Loads ggplot2, dplyr, tidyr, and more\n```\n:::\n\n\n\n\nWe are now set up to start looking at our data from **Wet Lab 3**\n\n## Experiment reminder\n\nTo remind you of what you completed during wet lab 3 and what data we will be dealing with today we have the below experimental workflow. ![](subcellular_prac.png)\n\nYou should have two types of experimental data.\n\n1.   The results of the bradford assay that will allow us to work out the protein concentration of each sample. *This is important for calculating the specific activity of Citrate Synthase in each sample*.\n\n2.  The Citrate Synthase activity assay data, which is in the form of absorbance over time. We will use this to calculate a rate of activity.\n\n    ## Load the Class Dataset\n\n> This dataset has: 1) Protein concentration from the Bradford assay, 2) Absorbance readings every 10 seconds for each sample, 3) The reaction rate already calculated\n\n::: callout-note\n**Task:** Load the class dataset and view the column names.\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read_csv(\"frac_data.csv\")\nhead(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 22\n  GROUP  Sample    `0`   `10`   `20`   `30`   `40`  `50`  `60`  `70`  `80`  `90`\n  <chr>  <chr>   <dbl>  <dbl>  <dbl>  <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n1 G1 & … Negat…  0.001  0.001  0.002  0.002  0.002 0.002 0.002 0.002 0.002 0.002\n2 G1 & … Healt…  0.003  0.011  0.016  0.019  0.022 0.025 0.027 0.028 0.029 0.03 \n3 G1 & … Healt…  0      0.016  0.031  0.048  0.066 0.083 0.101 0.118 0.135 0.152\n4 G1 & … Disea… -0.012 -0.01  -0.007 -0.004 -0.002 0     0.002 0.005 0.007 0.009\n5 G1 & … Disea…  0      0.008  0.016  0.024  0.033 0.042 0.051 0.059 0.068 0.076\n6 G1 & … Posit…  0.178  0.408  0.498  0.544  0.58  0.61  0.637 0.663 0.688 0.708\n# ℹ 10 more variables: `100` <dbl>, `110` <dbl>, `120` <dbl>,\n#   `Equation of trendline` <lgl>, `Rate of Change (ΔA412/s)` <dbl>,\n#   `Rate of Change (ΔC)` <dbl>, `Amount TNB/s (M)` <dbl>,\n#   `Amount TNB/s (nM)` <dbl>, `Amount TNB/min (nM)` <dbl>,\n#   `Protein (mg/mL) - from Bradford assay` <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n## Plot the Absorbance Over Time\n\nThis shows how absorbance (A412) changes during the reaction. It helps us understand how fast the reaction is happening.\n\n::: callout-note\n**Task:** Make a long version of the data and plot absorbance vs time.\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_long <- data %>%\n  pivot_longer(cols = c(`0`:`120`), names_to = \"time\", values_to = \"absorbance\") %>%\n  mutate(time = as.numeric(time))\n\nggplot(data_long, aes(x = time, y = absorbance, colour = Sample)) +\n  geom_point(alpha = 0.6, size = 2) +\n  geom_smooth(method ='lm') +\n  labs(title = \"Absorbance Over Time\",\n       x = \"Time (s)\",\n       y = \"Absorbance\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](DP2_Final_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n\n### [What does this tell you about the rate of the reactions for the different sample types?]{style=\"color:red\"}\n\n## Calculating Specific Enzyme Activity\n\nOne of the key goals of the wet lab was to measure **citrate synthase activity**, a marker for mitochondrial function. However, raw absorbance rates don’t mean much on their own—we need to normalise them to protein content to make meaningful comparisons.\n\nWe calculate **specific activity** as follows:\n\n``` text\nSpecific activity = Amount TNB / min / mg protein\n```\n\n::: callout-note\n**Task:** Use `mutate()` to make a new column for Specific Activity.\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- data %>%\n  mutate(Specific_Activity = `Amount TNB/min (nM)` / `Protein (mg/mL) - from Bradford assay`)\n```\n:::\n\n\n\n\n## Class Data Analysis: Specific Activity of Citrate Synthase\n\nNow that you've calculated specific activity, we can move on to analysing the **class-wide dataset**. This combined data allows us to evaluate trends across all groups and gain a broader perspective on variation.\n\n## Make a Bar Plot of Class Results\n\nThis plot shows how enzyme activity changes between samples in the class dataset.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, aes(x = Sample, y = Specific_Activity, color = Sample)) +\n  geom_boxplot() +\n  labs(title = \"Citrate Synthase Activity by Sample (Class Data)\",\n       x = 'Sample',\n       y = \"Specific Activity (nmol/min/mg)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_blank(),\n        axis.ticks.x = element_blank())\n```\n\n::: {.cell-output-display}\n![](DP2_Final_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n### [Which samples had the highest activity?]{style=\"color:red\"}\n\n------------------------------------------------------------------------\n\n## Compare Groups Using Faceting\n\nIn R we have the ability to create a lot of graphs very quickly using something called **faceting**. Faceting creates a separate plot panel for each category in a grouping variable—this makes it easier to compare groups side-by-side without crowding the same graph.\n\nIn this case, we can use `facet_wrap(~ GROUP)` to generate one boxplot per group. Each panel will show the different sample types (cytosol vs mitochondria) within that group. This helps us quickly spot patterns across the class, like whether healthy samples consistently show higher activity than diseased ones.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, aes(x = Sample, y = Specific_Activity, color = Sample)) +\n  geom_boxplot() +\n  labs(title = \"Citrate Synthase Activity by Sample (Faceted by GROUP)\",\n       x = \"Sample\",\n       y = \"Specific Activity (nmol/min/mg)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_blank(),\n        axis.ticks.x = element_blank()) +\n  facet_wrap(~ GROUP)\n```\n\n::: {.cell-output-display}\n![](DP2_Final_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\nWe can facet in all sort so different ways, here in the below code we change our plot so we have every group togeather and facet by sample instead.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, aes(x = GROUP, y = Specific_Activity)) +\n  geom_boxplot() +\n  labs(title = \"Citrate Synthase Activity by Sample (Faceted by SAMPLE)\",\n       x = \"Sample\",\n       y = \"Specific Activity (nmol/min/mg)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_blank(),\n        axis.ticks.x = element_blank()) +\n  facet_wrap(~ Sample)\n```\n\n::: {.cell-output-display}\n![](DP2_Final_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n## Compare Healthy vs Diseased Cells\n\nGroup the class data by sample type (healthy or diseased) and fraction (cytosol or mitochondria) to get averages.\n\n::: callout-note\n**Task:** Make a table showing mean and standard deviation for each sample type across all groups.\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata %>%\n  group_by(Sample) %>%\n  summarise(mean = mean(Specific_Activity), sd = sd(Specific_Activity))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  Sample                                   mean    sd\n  <chr>                                   <dbl> <dbl>\n1 Diseased cells - cytosolic fraction      4.42  1.01\n2 Diseased cells - mitochondrial fraction 21.6   6.44\n3 Healthy cells - cytosolic fraction       6.30  1.94\n4 Healthy cells - mitochondrial fraction  40.0  12.3 \n5 Negative control                        75.5  45.7 \n6 Positive control                        86.9  29.4 \n```\n\n\n:::\n:::\n\n\n\n\n### [Question: What sample had the highest enzyme activity?]{style=\"color:red\"}\n\n### [Question: What does this show about mitochondrial function?]{style=\"color:red\"}\n\n### [Question: Can you detect an effect of disease?]{style=\"color:red\"}\n\n## Summary\n\nBy working with your own experimental data and combining it with class-wide results, you’ve learned how to:\n\n-   Import and explore real experimental datasets\n-   Calculate and interpret specific enzyme activity\n-   Use R to summarise biological variation\n-   Visualise group-level trends using scatter plots and boxplots\n-   Quickly analyse trends across data by using *faceting*\n\nThis approach not only gives you hands-on experience with data science tools but also helps you understand how bioinformatics pipelines are used in real molecular biology research—from raw numbers to biological insight.\n",
    "supporting": [
      "DP2_Final_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}