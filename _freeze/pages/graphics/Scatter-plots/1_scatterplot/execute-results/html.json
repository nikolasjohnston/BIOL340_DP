{
  "hash": "6f7b890a6d6cb9b533070d9067bc4812",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Scatter plots\"\nauthor: \"Mitchell Stares\"\nweight: 51\ndate: \"2018-11-13\"\noutput: blogdown::html_page\neditor_options:\n  chunk_output_type: console\n---\n\n\n\n\n\n\n\n::: callout\nFor this section, we will be using the **tadpoles.csv** data set\n:::\n\nThe second dataset we analysed tadpole abundance in different sized ponds using a linear model/regression. Plotting linear regressions is really straightforward, but can be done a couple of different ways, depending on what you wish to accomplish. \n\nFirst, let's run the basic analysis again (excluding the reeds factor). \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntadpoles.lm <- lm(abundance ~ pondsize, data = tadpoles)\nsummary(tadpoles.lm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = abundance ~ pondsize, data = tadpoles)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-73.546 -29.752  -8.026  37.978  77.652 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)   \n(Intercept)  23.8251    25.8455   0.922  0.36662   \npondsize      1.7261     0.5182   3.331  0.00303 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 49.42 on 22 degrees of freedom\nMultiple R-squared:  0.3352,\tAdjusted R-squared:  0.305 \nF-statistic: 11.09 on 1 and 22 DF,  p-value: 0.003032\n```\n\n\n:::\n:::\n\n\n\nFor this, we will be setting up a scatter plot (geom_point) of our points and then adding the line separately.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(tadpoles, aes(x=pondsize, y=abundance)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](1_scatterplot_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\nThats our basic scatter plot. Simply using the `geom_point()` we covered breifly in the basic plots section.  \n\nFrom here, we can customise our points using a variety of arguments within `geom_point()`. \n\n#### Colour\n\nColouring our points can be done in two ways. We can use the colour commands within our aesthetics and colour by a factor in our dataset, or, we can colour all the points within `geom_point()`. Lets cover the `aes()` commands.  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(tadpoles, aes(x=pondsize, y=abundance, colour=reeds, shape = reeds)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](1_scatterplot_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\nAs we covered in the basic plotting section, changing the colour and shape of points can be done through the use of \"colour\" and \"shape\" arguments within the aesthetics of ggplot or any geometric object (e.g. geom_point). To change the colour of these manually simply use `scale_colour_manual()` or `scale_shape_manual()` like so:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(tadpoles, aes(x=pondsize, y=abundance, colour=reeds, shape = reeds)) +\n  geom_point()+\n  scale_colour_manual(values = c(\"mediumspringgreen\", \"forestgreen\", \"black\"))+\n  scale_shape_manual(values = c(15, 16, 17))\n```\n\n::: {.cell-output-display}\n![](1_scatterplot_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\nEach of the scale commands requires you to list the colours/shapes within a concatenated (c) list. This will be all most of you will ever need so simply copy those lines and replace/add values as you need. \n\n* [Colours can be found here](http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf)  \n* [Shapes can be found here](http://www.sthda.com/sthda/RDoc/figure/graphs/r-plot-pch-symbols-points-in-r.png)  \n![Shapes](/images/shapes.png?height=15pc&width=15pc)\n\n",
    "supporting": [
      "1_scatterplot_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}