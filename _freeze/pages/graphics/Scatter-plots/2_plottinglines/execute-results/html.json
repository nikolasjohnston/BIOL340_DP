{
  "hash": "e01b75c5f9483ea55993065453acfc8e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Linear Lines\"\nauthor: \"Mitchell Stares\"\nweight: 52\ndate: \"2018-11-14\"\noutput: blogdown::html_page\neditor_options:\n  chunk_output_type: console\n---\n\n\n\n\n\n\n\nTo produce a line on our graph, the easiest solution is using `geom_smooth(method=lm)`. `geom_smooth()` by default will produce a loess smooth through our graph with confidence intervals. Since we have run a **linear** model, we specify the method of the geometric shape to fit that of a linear model (lm). \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(tadpoles, aes(x=pondsize, y=abundance)) +\n  geom_point(alpha = 0.5)+\n  geom_smooth(method=lm)\n```\n\n::: {.cell-output-display}\n![](2_plottinglines_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n`method=lm` tells the smooth line to plot a linear relationship between the variables in the graph environment. You will see it automatically plots confidence intervals and colours the line blue. By default it will only extend to the range of our data, which is good. Both of these can be changed with the following:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(tadpoles, aes(x=pondsize, y=abundance)) +\n  geom_point(alpha = 0.5)+\n  geom_smooth(method=lm, se = FALSE, fullrange = TRUE)\n```\n\n::: {.cell-output-display}\n![](2_plottinglines_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n`se = FALSE` will turn off the standard error/confidence intervals for the line. This is set to true by default.  \n`fullrange = TRUE` will extrapolate the line to the fullrange of the x & y axes. *This should only be used it you are confident in what you are doing, as it does extrapolate data outside of what you collected.*  \n\n#### Colour and line type\n\nColouring the the line follows the same principles as points and bars. `colour =` will colour the line itself, while `fill =` will colour the ribbon/confidence intervals.  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(tadpoles, aes(x=pondsize, y=abundance)) +\n  geom_point(alpha = 0.5)+\n  geom_smooth(method=lm, colour = \"red\", fill = \"mediumpurple1\")\n```\n\n::: {.cell-output-display}\n![](2_plottinglines_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\nWe can also change the line type using `linetype = ` and specifying one of the 6 line types.  \n![R Linetypes](/images/lines.png?width=15pc&height=15pc)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(tadpoles, aes(x=pondsize, y=abundance)) +\n  geom_point(alpha = 0.5)+\n  geom_smooth(method=lm, colour = \"red\", linetype = 2)\n```\n\n::: {.cell-output-display}\n![](2_plottinglines_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n#### Multiple Lines\n\nWe can also plot multiple lines using the colour argument within the aesthetics (aes) of our graph and colour by a factor.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(tadpoles, aes(x=pondsize, y=abundance, colour = reeds)) +\n  geom_point(alpha = 0.5)+\n  geom_smooth(method=lm) \n```\n\n::: {.cell-output-display}\n![](2_plottinglines_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\nThis time, we plot three lines by using the reeds factor. You can change the colouring and shape of each of the lines using the same commands as with points and bars. \n\n::: callout\nYou dont need to specify the aesthetic variables in the ggplot command, you can do so in each separate **geom** line by using aes(). This means you can produce three lines using colour in geom_smooth, but keep the points normal in geom_point. This is the same across all ggplot graphs \n:::  \n\nThis is an example of that point. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(tadpoles) +\n  geom_point(aes(x=pondsize, y=abundance))+\n  geom_smooth(aes(x=pondsize, y=abundance, colour = reeds), method=lm) \n```\n\n::: {.cell-output-display}\n![](2_plottinglines_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nYou can see in this example, that the points are black, while the three lines are coloured by reeds. \n\n",
    "supporting": [
      "2_plottinglines_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}