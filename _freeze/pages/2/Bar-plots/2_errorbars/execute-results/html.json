{
  "hash": "72e1ffdfa59693d638a261b406892461",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Errorbars\"\nauthor: \"Mitchell Stares\"\nweight: 42\ndate: \"2018-11-12\"\noutput: blogdown::html_page\neditor_options:\n  chunk_output_type: console\n---\n\n\n\n\n\n\n\nError bars are a simply addition to your graph, utilising their own geometric command `geom_errorbar()`.\nTo add the error bars, we use the following command\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(weeds.summarise, aes(x=species, y=mean)) +\n  geom_bar(stat=\"identity\")+\n  geom_errorbar(aes(ymin = mean-se, ymax = mean+se))\n```\n\n::: {.cell-output-display}\n![](2_errorbars_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nThis is suprisingly simple. All we do is specify the aesthetic (aes) where we compute our minimum and maximum y values for our bars as our mean column +/- our standard error column.  \n\nWe can further customise our errorbars through the use of a few arguments. Lets explore those iteratively.  \n\n#### Size  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(weeds.summarise, aes(x=species, y=mean)) +\n  geom_bar(stat=\"identity\")+\n  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), size = 2)\n```\n\n::: {.cell-output-display}\n![](2_errorbars_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nThe size argument increases the thickness of the errorbars \n\n#### Colour, linetype and transparency  \n\nWe can also change the colour, linetype, and transparency. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(weeds.summarise, aes(x=species, y=mean)) +\n  geom_bar(stat=\"identity\")+\n  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), colour = \"red\")\n```\n\n::: {.cell-output-display}\n![](2_errorbars_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nColour is as straightforward as usual, just name a colour.\n\nFor linetype, we specify a number between 1-6 that corresponds to R's built in linetypes.\n![R Linetypes](/images/lines.png?width=15pc&height=15pc)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(weeds.summarise, aes(x=species, y=mean)) +\n  geom_bar(stat=\"identity\")+\n  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), colour = \"red\", linetype = 2)\n```\n\n::: {.cell-output-display}\n![](2_errorbars_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\nTransparency is specified throught the `alpha` argument, giving a number between 0 (transparent) and 1 (solid). It's pretty pointless for errorbars, but it can be used for many other functions.  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(weeds.summarise, aes(x=species, y=mean)) +\n  geom_bar(stat=\"identity\")+\n  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), size = 2, alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](2_errorbars_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n#### Width  \n\nThe width argument is arguably the most important aesthetical customisation for errorbars. Width customises the width of the errorbars compared to the width of the bars. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(weeds.summarise, aes(x=species, y=mean)) +\n  geom_bar(stat=\"identity\")+\n  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width = 0.5)\n```\n\n::: {.cell-output-display}\n![](2_errorbars_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\nThe default width value for errorbars is 0.9, that is 90% of the width of the bar. \n\n",
    "supporting": [
      "2_errorbars_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}