{
  "hash": "db575cfbfa10acfddb26fa9845eb05e5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Significant notation\"\nauthor: \"Mitchell Stares\"\nweight: 43\ndate: \"2018-11-13\"\noutput: blogdown::html_page\neditor_options:\n  chunk_output_type: console\n---\n\n\n\n\n\n\n\nWhen presenting our results to an audience (paper or presentation) it is important to communicate our results clearly in a manner that is understandable to a wider audience. Tha main way to do so with an Analysis of Variance, is using a post-hoc test like a Tukeys Honest Significant Difference (Tukeys HSD). This will analyse the differences between the levels within a factor to distinguish which levels are significantly different from one another. \n\nTo jog our memory from our test, let's run the Tukeys test from our analysis module using the `HSD.test()` from the agricolae package.  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(agricolae)\nHSD.test(weeds.aov2, \"species\", console=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nStudy: weeds.aov2 ~ \"species\"\n\nHSD Test for flowers \n\nMean Square Error:  130.122 \n\nspecies,  means\n\n          flowers      std  r       se Min Max  Q25  Q50  Q75\nCoprosma  24.1250 11.13478 16 2.851776  13  52 17.0 21.5 28.0\nOlearia   36.7500 12.08580 16 2.851776  16  55 27.5 37.0 47.5\nPultenaea 40.5625 10.97858 16 2.851776  20  57 33.5 41.0 49.0\n\nAlpha: 0.05 ; DF Error: 42 \nCritical Value of Studentized Range: 3.435823 \n\nMinimun Significant Difference: 9.798198 \n\nTreatments with the same letter are not significantly different.\n\n          flowers groups\nPultenaea 40.5625      a\nOlearia   36.7500      a\nCoprosma  24.1250      b\n```\n\n\n:::\n:::\n\n\n\nAccording to the tukeys results, Coprosma is significantly different from the others. So we will label it **A** and the others **B**.  \n\nThere are two main ways to plot notation on a graph, a manual way using coordinates, and an automatic way. We will cover the manual way first so we can see how it works before preceeding to the easy method. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(weeds.summarise, aes(x=species, y=mean)) +\n  geom_bar(stat=\"identity\")+\n  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width = 0.5)+\n  geom_text(label = c(\"A\", \"B\", \"B\"), aes(y = c(28.5, 41, 44.5), x = species), size = 6)\n```\n\n::: {.cell-output-display}\n![](3_tukeys_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# try including the geom_text() in your original weeds.bar code. \n```\n:::\n\n\n\nAdding notation is done through `geom_text()`. We need to specify the labels (in order from left -> right) along with the aesthetic coordinates on the x and y axis. The X axis we can direct it to our original x axis data (species) and it will sit in the centre of the column. The Y coordinates are the location on the Y axis the text should sit. \n\nThis method is very finicky but is a great method if you are looking to plot one letter/symbol on the graph. You can add multiple `geom_text()` commands if needed. \n\nThe quicker solution to this, is to use a combination of our errorbars and an additional argument called **vjust** (vertical adjustment). \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(weeds.summarise, aes(x=species, y=mean)) +\n  geom_bar(stat=\"identity\")+\n  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width = 0.5)+\n  geom_text(label = c(\"A\", \"B\", \"B\"), aes(y = mean+se, x = species),vjust = -0.5, size = 6)+ \n  ylim(0, 50)\n```\n\n::: {.cell-output-display}\n![](3_tukeys_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\nWe simply specify our Y coordinates as the top of our error bar (mean + se) and use the **vjust** (vertical ajustment) argument to move it slightly above the bar. You might have to change your ylim to display the last letter, which got cut off.  \n\n\n\n\n\n\n",
    "supporting": [
      "3_tukeys_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}