{
  "hash": "92c5ce969f352f6ddaaab32142be64e7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"The Rename Function\"\ndescription: \"Rename columns in a data frame while maintaining the data in tact\"\nweight: 10\ndate: '2018-10-31'\nauthor: \"Mitchell Stares\"\noutput: blogdown::html_page\neditor_options:\n  chunk_output_type: console\n---\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\nYou will often need to rename data you enter or obtain from others, as R converts any spaces to fullstops and people tend to capitilise most words. The `rename()` function allows us to simply rename a column name within our data frame.\n\n\\\nPersonally, this is my favourite function in R as I hate captials, fullstops and other annoying column name problems that slow down coding or generate errors. Trust me, when you spend an hour trying to fix a line of code only to find a single capital letter is missing, you will understand.\n\nTo do this with dplyr (a tidyverse package) we simply use the following command:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweeds <- rename(weeds, flowers = flowers.m3)\n# In the brackets we need to specify our data frame (weeds) followed by a second argument specifying the name we want for our column = the name we already have.\n# Again, if you run this by itself it will not save to your data frame, unless you direct it to your data frame variable using the <- \n```\n:::\n\n\n\n\nPretty simple and straightforward.\n\nIf you want to rename multiple columns, this is a pretty simple addition. For demonstrating purposes, I am going to rename all the columns of weeds to nonsensical crap.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrocerylist <- rename(weeds, coopers = \"flowers\", asahi = \"species\", vb = \"soil\", littlecreatures = \"weeds\")\n# to specify multiple variables/columns, we simply add a comma after the first rename and keep going. \n```\n:::\n\n\n",
    "supporting": [
      "1_rename_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}